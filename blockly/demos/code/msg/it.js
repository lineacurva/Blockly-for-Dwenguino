var MSG = {
  title: "DwenguinoBlockly",
  blocks: "Blocchi",
  linkTooltip: "Salva e collega ai blocchi.",
  runTooltip: "Esegui il programma definito dai blocchi nell'area di lavoro..",
  loadBlocksFileTooltip: "Apre un programma salvato in precedenza",
  saveBlocksFileTooltip: "Salva i blocchi in un file sul tuo computer",
  toggleSimulator: "Attiva la vista simulatore",
  badCode: "Errore del programma:\n%1",
  timeout: "Superato il numero massimo di iterazioni consentite",
  trashTooltip: "Elimina tutti i blocchi",
  catLogic: "Logica",
  catLoops: "Cicli",
  catMath: "Matematica",
  catText: "Testo",
  catLists: "Liste",
  catColour: "Colori",
  catArduino: "Codice",
  catVariables: "Variabili",
  catFunctions: "Funzioni",
  catDwenguino: "Dwenguino",
  catBoardIO: "In e Out",
  listVariable: "lista",
  textVariable: "testo",
  httpRequestError: "C'è stato un problema con la tua richiesta!",
  linkAlert: "Condividi i tuoi blocchi con questo link:\n\n%1",
  hashError: "Uhm, '%1' non corrisponde a nesssun programma salvato!",
  xmlError: "Non posso caricare il file! Forse è stato salvato con una versione diversa di Blockly?",
  badXml: "Errore durante l'analisi XML:\n%1\n\nSeleziona 'OK' per abbandonare le modifiche o 'Annulla' per continuare a modificare l'XML.",
  pressed: "PREMUTO",
  setup: "setup",
  loop: "loop",
  dwenguino_main_program_structure: "Il codice nel blocco setup viene eseguito una sola volta. Il codice nella parte loop viene eseguito fino a che non si arresta il programma.",
  catDwenguino: "Dwenguino",
  delay_help: "Aspetta per un certo numero di millisecondi (1000 milisecondo = 1 second0)",
  delay: "delay",
  clearLCD: "Cancella il contenuto dello schermo LCD",
  dwenguinoLCD: "Dwenguino LCD %1 %2 %3 Scrivi testo: %4 Sulla riga: %5 Partendo dalla colonna: %6",
  pin: "pin",
  toneOnPin: "Riproduci un suono su ",
  frequency: "con frequenza",
  noToneOnPin: "Arresta il suono su",
  toneOnPinTooltip: "Riproduci un suono a una specifica frequenza usando un pin specifico",
  noToneOnPinTooltip: "Ferma il suono sul pin",
  trig: "numero del pin corrispondente a trig",
  echo: "numero del pin corrispondente a echo",
  sonarTooltip: "Questo sensore misura la distanza di un oggetto dal sensore stesso",
  miliseconds: "ms",
  digitalRead: "Leggi una valore digitale da",
  digitalWriteToPin: "Assegna al pin",
  digitalWriteValue: "digital value",
  digitalWriteTooltip: "Assegna il valore 1 (cioè high, alto) o 0 (cioè low, basso) su un pin digitale della scheda",
  digitalReadTooltip: "Leggi un valore digitale 1 (cioè high, alto) o 0 (cioè low, basso) da un pin specifico sulla scheda",
  high: "1, HIGH",
  low: "0, LOW",
  highLowTooltip: "Represents a high (1) or low (0) value on a pin.",
  tutsIntroduction: "Introduzione",
  tutsTheremin: "Theremin",
  tutsRobot: "Robot",
  simulator: "Simulatore",
  setLedState: "Accendi/spegni %1 %2",
  setLedStateTooltip: "Accende o spegne un led sulla scheda",
  ledPinsTooltip: "Seleziona un led che vuoi controllare",
  dwenguinoOn: "Acceso (ON)",
  dwenguinoOff: 'Spento(OFF)',
  dwenguinoOnOffTooltip: "Seleziona un valore per accendere o spegnere un LED",
  dwenguinoServoBlock: "Motore servo %1 %2 %3 canale # %4 angolo %5",
  dwenguinoServoBlockTooltip: "Posiziona un servomotore collegato alla scheda in una posizione che va da 0 a 180 gradi",
  dwenguinoDCMotorBlock: "Motore DC %1 %2 %3 canale %4 velocità %5",
  dwenguinoDCMotorBlockTooltip: "Imposta la velocità di uno dei due motori collegabili alla scheda. Velocità = valori da -255 (indietro tutta) e 255 (avanti tutta)",
  dwenguinoAnalogWrite: "Assegna sul pin %1 il valore analogico %2",
  dwenguinoAnalogWriteTooltip: "Assegna un valore analogico da 0 a 255 a un pin specificato",
  dwenguinoAnalogRead: "Leggi il valore analogico del pin %1",
  dwenguinoAnalogWriteTooltip: "Legge una valore analogico da 0 a 255 dal pin specificato",
  digitalReadSwitch: "Leggi dal pulsante %1",
  digitalReadSwitchTooltip: "Legge il valore di uno dei pulsanti della scheda",
  north: "Nord",
  east:"Est",
  south: "Sud",
  west: "Ovest",
  center: "Centro",
  ledsReg: "LEDS",
  dwenguinoLedsRegTooltip: "Puoi controllare i 7 led sulla scheda con i numeri binari. Per esempio 0b00001111 accende i primi 3 led, lasciando spenti gli altri",

};

MSG.tutorials = {
    introduction: {},
    theremin: {},
    robot: {}
};

MSG.tutorials.introduction = {
  step1Title: "Benvenuti su DwenguinoBlockly!",
  step1Content: "Ciao! Sono Dwenguino! Ti aiuterò a prendere confidenza con l'interfaccia!",
  step2aTitle: "Questa è l'area codice",
  step2aContent: "In quest'area devi posizionare i blocchi. Devi combinarli all'interno delle due aree setup e loop se vuoi che vengano eseguiti!",
  step2bTitle: "Questa è l'area strumenti",
  step2bContent: "Questa è la cassetta degli attrezzi: contiene gli strumenti, cioè i blocchi, che puoi usare per costruire il tuo programma. I blocchi sono divisi in categorie, così che sia più semplice scegliere quali utilizzare per il tuo scopo.",
  step3Title: "Seleziona la lingua",
  step3Content: "Usa questo menù per selezionare la lingua",
  step4Title: "Difficoltà",
  step4Content: "Puoi scegliere fra l'interfaccia base, principiante, o quella avanzata",
  step5Title: "Dwengobook",
  step5Content: "I Dwengobook sono guide che ti aiutano a realizzare progetti divertenti!",
  step6Title: "Carica il codice",
  step6Content: "Quando il tuo codice è completo, potrai caricarlo sulla tua scheda. Accertati di aver selezionato la giusta scheda nella IDE di Arduino!",
  step7Title: "Apri",
  step7Content: "Apre un programma salvato in precedenza",
  step8Title: "Salva",
  step8Content: "Salva il tuo programma in un file sul tuo computer.",
  step9Title: "Simulatore",
  step9Content: "In futuro potrai usare questo pulsante per attivare il simulatore e verificare che il tuo codice funzioni."

};
